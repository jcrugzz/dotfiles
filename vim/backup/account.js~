"use strict";

var user = require('./models/user');

var account = module.exports = exports = function (data, callback) {

  /*
  * Parse method for what action to take for account
  */
  switch (data.method) {

    case 'add':

      add(data.account, callback);

      break;

    case 'update':

      update(data.account, callback);

      break;

    case 'remove':

      remove(data.account, callback);

      break;

    default:

      var err = new Error(data.method + 'is not a valid method');

      callback(err, null);

  }

/*
  * Add Account to user document
    * Need Domain argument and encrypted account string (value)
    */
  function add () {

    user.get(data.id, function (err, obj) {

      if(err) {

        callback(err, null);

      }

      obj.accounts[data.account.domain].push(data.account.value);

      user.update(data.id, obj, function (err, obj) {

        if(err) {

          callback(err, null);

	}

        callback(null, obj);

      });

    });

  }

  function update () {



  }

  function remove () {


  }

};
